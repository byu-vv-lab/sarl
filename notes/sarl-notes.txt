
IdealFactory:
  can arguments have non-ideal type?
  
Reason why we might want that: to use IdealSimplifier
  on herbrand expressions and equals.

Proposal: before passing anything to any ideal method,
including equals, you have to cast to an ideal type
Maybe even insist an IdealExpression must have ideal type.
Use HerbrandExpression for others?

Example:
  a[i] : herbrand int
  3h : herbrand constant 3

predicate p: a[i]==3h -> (int)a[i] == 3 -> (int)a[i] - 3 = 0
constant map: (int)a[i] : 3
   change to a[i] : 3h
problem: keys in constantMap are Polynomials

instead of constantMap, add to simplifyMap

solution: 
expression e: PLUS(x,1h) -> PLUS(3h,1h)

simplifier: if arguments don't have ideal type, then
  treat them generically only.
