                    SARL Installation Instructions

======================= Installation from source =======================

1. Install a Java 7 SDK if you have not already.  Go to
http://www.oracle.com/technetwork/java/javase/downloads/ for the
latest from Oracle.  On linux, you can optionally sudo apt-get install
openjdk-7-jdk.

2. Install Apache ant, if you don't already have it
(http://ant.apache.org).

3. Download the JUnit jar (v. 4.11) and Jacoco gzipped tar archives from
http://vsl.cis.udel.edu/tools. Put these files somewhere on your
system and untar the Jacoco archives.

4. Download and build CVC3:
   4a. Start by downloading
       http://www.cs.nyu.edu/acsys/cvc3/releases/2.4.1/cvc3-2.4.1.tar.gz,
       unzip and untar.  
   4b. On linux, make sure you have flex, bison, libgmp10, and openjdk-7-jdk.
       You can get these as follows:
         sudo apt-get install flex --assume-yes
         sudo apt-get install bison --assume-yes
         sudo apt-get install libgmp10 --assume-yes
         sudo apt-get install libgmp-dev --assume-yes
         sudo apt-get install openjdk-7-jdk --assume-yes
       On OS X, use the App Store to install XCode, and use XCode to
       install the Developer Tools.
   4c. Change into the CVC3 directory and run the configure script as follows:
       for 32-bit linux:
./configure CXXFLAGS=-m32 --enable-dynamic --enable-java --with-java-home=/usr/lib/jvm/java-7-openjdk-i386
       for 64-bit linux:
./configure CXXFLAGS=-m64 --enable-dynamic --enable-java --with-java-home=/usr/lib/jvm/java-7-openjdk-amd64
       for 64-bit OS X:
./configure CXXFLAGS=-m64 --enable-dynamic --enable-java --with-java-home=/System/Library/Frameworks/JavaVM.framework/Versions/Current --with-java-includes=/System/Library/Frameworks/JavaVM.framework/Versions/Current/Headers
   4d. make

5. Download and build clj-ds, Clojure's persistent data structures in
pure Java, from https://github.com/krukow/clj-ds

6. Download and build PCollections, another persistent data structure
library, from http://code.google.com/p/pcollections/

7. svn checkout svn://vsl.cis.udel.edu/sarl

8. cd sarl/trunk

9. Create a file named build.properties by copying and editing one of
the examples in the properties directory.  Edit each entry to point to
the corresponding items you downloaded in step 3.

10. Type "ant" and everything should build without warnings or errors
and produce sarl.jar.  Type "ant test" to run a JUnit test suite.  All
tests should pass.

If there are any problems, email siegel at udel dot edu.

============== Installation from source using Eclipse ==================

1. Start with Eclipse IDE for Java/EE developers, available at
http://www.eclipse.org/downloads/

2. Do steps 1-6 from above if you have not already.

3. Install an SVN plugin in Eclipse (such as Subversive) if you have
not already.

4. From within Eclipse, select New Project...from SVN.  The archive is
svn://vsl.cis.udel.edu/sarl.  After entering that, open it up and
select the "trunk". (It is simplest to just check out the trunk for
the Eclipse project.)

5. Check out the trunk, and create the project using the New Java
Project Wizard as usual, naming it "SARL".  The .project, .classpath,
and other Eclipse meta-data are already in the SVN archive, saving you
a bunch of work.

6. Create a build.properties file as in the directions above.
This is not used by Eclipse, but you will want to use Ant to
build the jar file.

7. The platform-specific information are handled in Eclipse by
defining Classpath variables.  Navigate to Preferences->Java->Build
Path->Classpath Variables->New and define a new variable called
"CVC3". To define it, navigate to and select the file libcvc3.jar
you created by building CVC3.  Create a new variable
"CLJ-DS" to point to the directory containing the class files
for CLJ-DS (.../src/main/java).  Create a new variable "PCOLLECTIONS"
to point to the PCollections jar file.  You may optionally define
variable for the source directories of all the above.  This can
help with debugging.

8. Do a clean build.  Everything should compile.  Generate the sarl.jar
by right-clicking (or ctrl-click on OS X) the build.xml file and
Run As->Ant Build.  

9. Go to Run->Run Configurations....  Create a new JUnit configuration.
Name it SARL Tests.  Select "Run all tests in the selected project..."
and navigate to the folder "test" in the SARL project.
The Test runner should be JUnit 4.  Under the Arguments tab, type
"-ea" (without the quotes) in the VM arguments area (to enable assertion
checking).     Under the Environment tab, add an entry
for DYLD_LIBRARY_PATH (OS X) or LD_LIBRARY_PATH (linux).  The value
for this variable should be a colon-separated list of directories
containing the CVC3 and libgmp shared libraries.  You might want to put
those shared libraries in one directory in a permanent place
to simplify things.   You can also define another Eclipse variable
containing this colon-separated list and use the variable name
for the value.  You should now be able to run the tests by clicking
"Run".
